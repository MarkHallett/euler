# euler002.py
'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

import inspect
import unittest
import nose

def e2():
    def next_fib():
        yield 1
        a = 1
        b = 0
        rtn = 0
        while a+b < 4000000:
            a, b = a+b , a
            yield a

    total = 0
    g = next_fib()
    for x in g:
        if x%2 == 0:
            total += x

    return total
# -----------------


class Test_euler002(unittest.TestCase):  
      
        # A   
        def test_A_setValuesToParentPrior(self):  
            p = 10  
            self.assertEqual(e2(),4613732)  
            #self.assertEqual(True,True)  
      
def testAll():  
        print '####################'  
        print 'tests', inspect.currentframe().f_code.co_filename   # filename  
        suite = unittest.TestLoader().loadTestsFromTestCase(Test_euler002)  
        unittest.TextTestRunner(verbosity=2).run(suite)  
       


if __name__ == '__main__':
    pass
